name: Verify snapshot of test scan

on: [pull_request]

permissions:
  contents: read

jobs:
  verify:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2.4.0

      - name: Make release snapshot output directory
        run: mkdir ${{ github.workspace }}/release-output

      - name: Get latest release snapshot download url
        id: download-latest-release-snapshot
        uses: actions/github-script@v5.0.0
        with:
          result-encoding: string
          script: |
            const res = await github.paginate(
              github.rest.actions.listArtifactsForRepo.endpoint.merge({
                owner: 'microsoft',
                repo: 'component-detection',
              })
            );

            return res
              .filter(
                (artifact) => artifact.name === 'release-snapshot-output-${{ matrix.os }}'
              )
              .sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at))[0]
              .archive_download_url;

      - name: Download latest release snapshot
        working-directory: ${{ github.workspace }}/release-output
        run: |
          curl -v -L -u octocat:${{ secrets.GITHUB_TOKEN }} -o output.zip "${{ steps.download-latest-release-snapshot.outputs.result }}"
          unzip output.zip
          rm output.zip

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 3.1.x

      - run: dotnet restore

      - name: Install Apache Ivy
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: apt install -y ant ivy

      - name: Install Apache Ivy
        if: ${{ matrix.os == 'windows-latest' }}
        run: choco install ant

      - name: Install Apache Ivy
        if: ${{ matrix.os == 'macos-latest' }}
        run: brew install ant ivy

      - name: Make output directory
        run: mkdir ${{ github.workspace }}/output

      - name: Scan verification repo
        working-directory: src/Microsoft.ComponentDetection
        run: dotnet run scan --Verbosity Verbose --SourceDirectory ${{ github.workspace }}/test/Microsoft.ComponentDetection.VerificationTests/resources --Output ${{ github.workspace }}/output

      - name: Run Verification Tests
        run: dotnet test --no-restore test/Microsoft.ComponentDetection.VerificationTests
        env:
          OFFICIAL_BUILD: 'True'
          GITHUB_OLD_ARTIFACTS_DIR: ${{ github.workspace }}/release-output
          GITHUB_NEW_ARTIFACTS_DIR: ${{ github.workspace }}/output
          ALLOWED_TIME_DRIFT_RATIO: '.75'

namespace Microsoft.ComponentDetection.Detectors.Tests;

using System.Linq;
using System.Threading.Tasks;
using FluentAssertions;
using Microsoft.ComponentDetection.Contracts;
using Microsoft.ComponentDetection.Contracts.TypedComponent;
using Microsoft.ComponentDetection.Detectors.Pub;
using Microsoft.ComponentDetection.TestsUtilities;
using Microsoft.VisualStudio.TestTools.UnitTesting;

[TestClass]
[TestCategory("Governance/All")]
[TestCategory("Governance/ComponentDetection")]
public class PubComponentDetectorTests : BaseDetectorTest<PubComponentDetector>
{
    private readonly string testPubSpecLockFile = @"# Generated by pub
# See https://dart.dev/tools/pub/glossary#lockfile
packages:
  analyzer:
    dependency: ""direct dev""
    description:
      name: analyzer
      sha256: ""sh1""
      url: ""https://pub.dev""
    source: hosted
    version: ""5.13.0""
  archive:
    dependency: transitive
    description:
      name: archive
      sha256: ""sh2""
      url: ""https://pub.dev""
    source: hosted
    version: ""3.4.4""
  async:
    dependency: direct main
    description:
      name: async
      sha256: ""sh3""
      url: ""https://pub.dev""
    source: hosted
    version: ""2.11.0""
  flutter:
    dependency: ""direct main""
    description: flutter
    source: sdk
    version: ""0.0.0""
sdks:
  dart: "">=3.0.0 <4.0.0""
  flutter: "">=3.10.0""
";

    [TestMethod]
    public async Task TestDetectorAsync()
    {
        var (result, componentRecorder) = await this.DetectorTestUtility
            .WithFile("pubspec.lock", this.testPubSpecLockFile)
            .ExecuteDetectorAsync();

        result.ResultCode.Should().Be(ProcessingResultCode.Success);
        componentRecorder.GetDetectedComponents().Count().Should().Be(3);

        var components = componentRecorder.GetDetectedComponents().Select(x => x.Component).ToArray();

        components.Should().Contain(new PubComponent(
            "analyzer",
            "5.13.0",
            "direct dev",
            "sh1",
            "https://pub.dev"));

        components.Should().Contain(new PubComponent(
            "archive",
            "3.4.4",
            "transitive",
            "sh2",
            "https://pub.dev"));

        components.Should().Contain(new PubComponent(
            "async",
            "2.11.0",
            "direct main",
            "sh3",
            "https://pub.dev"));
    }
}
